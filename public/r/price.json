{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "price",
  "type": "registry:component",
  "title": "Price",
  "description": "A price component.",
  "files": [
    {
      "path": "registry/ui/price.tsx",
      "content": "import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst priceVariants = cva(\"flex items-center gap-2\", {\n  variants: {\n    size: {\n      sm: \"text-sm\",\n      md: \"text-base\",\n      lg: \"text-lg\",\n      xl: \"text-xl\",\n      \"2xl\": \"text-2xl\",\n    },\n    variant: {\n      default: \"text-foreground\",\n      muted: \"text-muted-foreground\",\n      primary: \"text-primary\",\n    },\n  },\n  defaultVariants: {\n    size: \"md\",\n    variant: \"default\",\n  },\n});\n\nexport interface PriceProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof priceVariants> {\n  price: number | string;\n  currency?: string;\n  originalPrice?: number | string;\n  discountPercentage?: number;\n  showBadge?: boolean;\n}\n\nconst Price = React.forwardRef<HTMLDivElement, PriceProps>(\n  (\n    {\n      className,\n      size,\n      variant,\n      price,\n      currency = \"$\",\n      originalPrice,\n      discountPercentage,\n      showBadge = true,\n      ...props\n    },\n    ref\n  ) => {\n    // Calculate discount percentage if not provided but original price exists\n    const discount =\n      discountPercentage ??\n      (originalPrice\n        ? Math.round(\n            ((Number(originalPrice) - Number(price)) / Number(originalPrice)) *\n              100\n          )\n        : undefined);\n\n    return (\n      <div\n        ref={ref}\n        className={cn(priceVariants({ size, variant }), className)}\n        {...props}\n      >\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center gap-2\">\n            <span\n              className={cn(\n                \"font-bold\",\n                size === \"sm\"\n                  ? \"text-sm\"\n                  : size === \"lg\"\n                    ? \"text-lg\"\n                    : size === \"xl\"\n                      ? \"text-xl\"\n                      : size === \"2xl\"\n                        ? \"text-2xl\"\n                        : \"text-base\"\n              )}\n            >\n              {currency}\n              {typeof price === \"number\" ? price.toFixed(2) : price}\n            </span>\n\n            {originalPrice && (\n              <span\n                className={cn(\n                  \"line-through text-muted-foreground\",\n                  size === \"sm\"\n                    ? \"text-xs\"\n                    : size === \"lg\"\n                      ? \"text-sm\"\n                      : size === \"xl\"\n                        ? \"text-base\"\n                        : size === \"2xl\"\n                          ? \"text-lg\"\n                          : \"text-xs\"\n                )}\n              >\n                {currency}\n                {typeof originalPrice === \"number\"\n                  ? originalPrice.toFixed(2)\n                  : originalPrice}\n              </span>\n            )}\n\n            {discount && discount > 0 && showBadge && (\n              <span\n                className={cn(\n                  \"rounded-full bg-red-100 px-2 py-0.5 text-xs font-medium text-red-800 dark:bg-red-900/30 dark:text-red-300\",\n                  size === \"sm\"\n                    ? \"text-[10px] px-1.5\"\n                    : size === \"lg\" || size === \"xl\" || size === \"2xl\"\n                      ? \"text-xs\"\n                      : \"text-[10px]\"\n                )}\n              >\n                -{discount}%\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\nPrice.displayName = \"Price\";\n\nexport { Price };\n",
      "type": "registry:component"
    }
  ]
}