{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "product-card",
  "type": "registry:component",
  "title": "Product Card",
  "description": "A product card component.",
  "files": [
    {
      "path": "registry/ui/product-card.tsx",
      "content": "import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst productCardVariants = cva(\n  \"relative overflow-hidden rounded-lg border transition-all hover:shadow-md\",\n  {\n    variants: {\n      layout: {\n        vertical: \"flex flex-col\",\n        horizontal: \"grid grid-cols-1 md:grid-cols-3\",\n      },\n      size: {\n        sm: \"max-w-xs\",\n        md: \"max-w-sm\",\n        lg: \"max-w-3xl\",\n      },\n      emphasis: {\n        default: \"bg-background\",\n        featured: \"bg-background ring-2 ring-primary/10\",\n      },\n    },\n    defaultVariants: {\n      layout: \"vertical\",\n      size: \"md\",\n      emphasis: \"default\",\n    },\n  }\n);\n\nexport interface ProductCardProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof productCardVariants> {}\n\nconst ProductCard = React.forwardRef<HTMLDivElement, ProductCardProps>(\n  ({ className, layout, size, emphasis, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(productCardVariants({ layout, size, emphasis }), className)}\n      {...props}\n    />\n  )\n);\nProductCard.displayName = \"ProductCard\";\n\nconst ProductCardImage = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"relative overflow-hidden\",\n      \"group-[[data-layout=vertical]]:aspect-square\",\n      \"group-[[data-layout=horizontal]]:h-full group-[[data-layout=horizontal]]:min-h-[200px]\",\n      className\n    )}\n    {...props}\n  />\n));\nProductCardImage.displayName = \"ProductCardImage\";\n\nconst ProductCardBadge = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"absolute left-2 top-2 z-10 rounded-full bg-primary px-2 py-1 text-xs font-medium text-primary-foreground\",\n      className\n    )}\n    {...props}\n  />\n));\nProductCardBadge.displayName = \"ProductCardBadge\";\n\nconst ProductCardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex flex-col p-4\", className)} {...props} />\n));\nProductCardContent.displayName = \"ProductCardContent\";\n\nconst ProductCardCategory = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm font-medium text-primary\", className)}\n    {...props}\n  />\n));\nProductCardCategory.displayName = \"ProductCardCategory\";\n\nconst ProductCardTitle = React.forwardRef<\n  HTMLHeadingElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"line-clamp-1 text-xl font-semibold\", className)}\n    {...props}\n  />\n));\nProductCardTitle.displayName = \"ProductCardTitle\";\n\nconst ProductCardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"mt-2 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nProductCardDescription.displayName = \"ProductCardDescription\";\n\nconst ProductCardRating = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"mt-1 flex items-center gap-1\", className)}\n    {...props}\n  />\n));\nProductCardRating.displayName = \"ProductCardRating\";\n\nconst ProductCardPrice = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"mt-2\", className)} {...props} />\n));\nProductCardPrice.displayName = \"ProductCardPrice\";\n\nconst ProductCardPriceAmount = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn(\"text-2xl font-bold\", className)} {...props} />\n));\nProductCardPriceAmount.displayName = \"ProductCardPriceAmount\";\n\nconst ProductCardPriceOriginal = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground line-through\", className)}\n    {...props}\n  />\n));\nProductCardPriceOriginal.displayName = \"ProductCardPriceOriginal\";\n\nconst ProductCardActions = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"mt-4 flex items-center justify-between gap-2\", className)}\n    {...props}\n  />\n));\nProductCardActions.displayName = \"ProductCardActions\";\n\nexport {\n  ProductCard,\n  ProductCardImage,\n  ProductCardBadge,\n  ProductCardContent,\n  ProductCardCategory,\n  ProductCardTitle,\n  ProductCardDescription,\n  ProductCardRating,\n  ProductCardPrice,\n  ProductCardPriceAmount,\n  ProductCardPriceOriginal,\n  ProductCardActions,\n};\n",
      "type": "registry:component"
    }
  ]
}